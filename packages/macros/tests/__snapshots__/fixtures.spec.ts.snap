// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`defineComponent autoReturnFunction fixtures > ./fixtures/define-component.tsx 1`] = `
"
import { useAttrs as __MACROS_useAttrs } from "vue";
import { useModel as __MACROS_useModel } from "/vue-jsx-vapor/macros/use-model";
import { useFullProps as __MACROS_useFullProps } from "vue-jsx-vapor";
import { withAsyncContext as __MACROS_withAsyncContext } from "vue";import { defineComponent, defineVaporComponent, nextTick, unref, VaporComponentInstance, VNode } from 'vue'

const $ = unref

const Comp = defineVaporComponent(
  (__MACROS_props) => {const attrs = __MACROS_useAttrs();
    __MACROS_useModel(__MACROS_props, 'modelValue',)
    const foo = $(
      __MACROS_useModel(__MACROS_props, 'foo', {
        validator: (value) => {
          return value === 'foo'
        },
        type: String,
      })!,
    )
    return () => <div>
      {[foo, __MACROS_props.bar, attrs.baz]}
      <__MACROS_props.Comp />
    </div>
  },
  { inheritAttrs: false, props: {
'bar': { required: true, type: String, default: 'bar' }, 
'Comp': null, 
'modelValue': null, 
'onUpdate:modelValue': null, 
'modelModifiers': null, 
'foo': { required: true, validator: (value) => {
          return value === 'foo'
        }, type: String }, 
'onUpdate:foo': null, 
'fooModifiers': null
}, ...{ name: 'Comp', props: { Comp: Object } } },
)

const Comp1 = defineVaporComponent(() => {const props = __MACROS_useFullProps();
  const foo = __MACROS_useModel(props, 'foo')
  return () => <div>
      {[foo.value, props['bar'], props['onUpdate:bar']]}
      <props.comp />
    </div>
}, { props: {
'bar': null, 
'onUpdate:bar': null, 
'comp': null, 
'foo': null, 
'onUpdate:foo': null, 
'fooModifiers': null
} })

const Comp2 = defineComponent(async () => {
let __temp, __restore

  ;(
  ([__temp,__restore] = __MACROS_withAsyncContext(() => nextTick())),
  await __temp,
  __restore()
)
  let foo = (
  ([__temp,__restore] = __MACROS_withAsyncContext(() => new Promise((resolve) => {
    setTimeout(() => resolve('foo'), 1000)
  }))),
  __temp = await __temp,
  __restore(),
  __temp
)
  return () => <div>{foo}</div>
})

const foo = () => {}
defineVaporComponent((__MACROS_props) => {
  return () => (
    <>
      {__MACROS_props.a}
      {__MACROS_props.b}
      {__MACROS_props.c}
      {__MACROS_props.d}
      {__MACROS_props.e}
      {__MACROS_props.f}
      {__MACROS_props.g}
      {__MACROS_props.h}
      {__MACROS_props.i}
    </>
  )
}, { props: {
'a': { type: Number, default: 0 }, 
'b': { type: String, default: 'b' }, 
'c': { type: Boolean, default: true }, 
'd': { type: Function, default: () => {} }, 
'e': { type: Object, default: () => ({}) }, 
'f': { type: Array, default: () => ([]) }, 
'g': { default: foo, skipFactory: true }, 
'h': { default: null }, 
'i': { required: true, default: undefined }
} })

// #21
const Comp3 = defineComponent(<T,>()=>{
  return () => <div>123</div>
})
;<Comp3 /> == ({} as VNode)
const Comp4 = defineVaporComponent(<T,>() => {
  return () => <div>123</div>
})
;<Comp4 /> == ({} as VaporComponentInstance)"
`;

exports[`fixtures > ./fixtures/define-component.tsx 1`] = `
"
import { useAttrs as __MACROS_useAttrs } from "vue";
import { useModel as __MACROS_useModel } from "/vue-jsx-vapor/macros/use-model";
import { useFullProps as __MACROS_useFullProps } from "vue-jsx-vapor";
import { withAsyncContext as __MACROS_withAsyncContext } from "vue";import { defineComponent, defineVaporComponent, nextTick, unref, VaporComponentInstance, VNode } from 'vue'

const $ = unref

const Comp = defineVaporComponent(
  (__MACROS_props) => {const attrs = __MACROS_useAttrs();
    __MACROS_useModel(__MACROS_props, 'modelValue',)
    const foo = $(
      __MACROS_useModel(__MACROS_props, 'foo', {
        validator: (value) => {
          return value === 'foo'
        },
        type: String,
      })!,
    )
    return <div>
      {[foo, __MACROS_props.bar, attrs.baz]}
      <__MACROS_props.Comp />
    </div>
  },
  { inheritAttrs: false, props: {
'bar': { required: true, type: String, default: 'bar' }, 
'Comp': null, 
'modelValue': null, 
'onUpdate:modelValue': null, 
'modelModifiers': null, 
'foo': { required: true, validator: (value) => {
          return value === 'foo'
        }, type: String }, 
'onUpdate:foo': null, 
'fooModifiers': null
}, ...{ name: 'Comp', props: { Comp: Object } } },
)

const Comp1 = defineVaporComponent(() => {const props = __MACROS_useFullProps();
  const foo = __MACROS_useModel(props, 'foo')
  return <div>
      {[foo.value, props['bar'], props['onUpdate:bar']]}
      <props.comp />
    </div>
}, { props: {
'bar': null, 
'onUpdate:bar': null, 
'comp': null, 
'foo': null, 
'onUpdate:foo': null, 
'fooModifiers': null
} })

const Comp2 = defineComponent(async () => {
let __temp, __restore

  ;(
  ([__temp,__restore] = __MACROS_withAsyncContext(() => nextTick())),
  await __temp,
  __restore()
)
  let foo = (
  ([__temp,__restore] = __MACROS_withAsyncContext(() => new Promise((resolve) => {
    setTimeout(() => resolve('foo'), 1000)
  }))),
  __temp = await __temp,
  __restore(),
  __temp
)
  return () => <div>{foo}</div>
})

const foo = () => {}
defineVaporComponent((__MACROS_props) => {
  return (
    <>
      {__MACROS_props.a}
      {__MACROS_props.b}
      {__MACROS_props.c}
      {__MACROS_props.d}
      {__MACROS_props.e}
      {__MACROS_props.f}
      {__MACROS_props.g}
      {__MACROS_props.h}
      {__MACROS_props.i}
    </>
  )
}, { props: {
'a': { type: Number, default: 0 }, 
'b': { type: String, default: 'b' }, 
'c': { type: Boolean, default: true }, 
'd': { type: Function, default: () => {} }, 
'e': { type: Object, default: () => ({}) }, 
'f': { type: Array, default: () => ([]) }, 
'g': { default: foo, skipFactory: true }, 
'h': { default: null }, 
'i': { required: true, default: undefined }
} })

// #21
const Comp3 = defineComponent(<T,>()=>{
  return () => <div>123</div>
})
;<Comp3 /> == ({} as VNode)
const Comp4 = defineVaporComponent(<T,>() => {
  return <div>123</div>
})
;<Comp4 /> == ({} as VaporComponentInstance)"
`;

exports[`fixtures > ./fixtures/define-expose.tsx 1`] = `
"
import { getCurrentInstance as __MACROS_getCurrentInstance } from "vue-jsx-vapor";export function Comp() {
  ;(__MACROS_getCurrentInstance().exposed = {
    foo: 1,
  })
  return <div />
}

export const Comp1 = function (props: any) {
  ;(__MACROS_getCurrentInstance().exposed = {
    foo: props.foo,
  })
  return <div />
}

export const Comp2 = ({ foo, ...__MACROS_props }: any) => {
  ;(__MACROS_getCurrentInstance().exposed = {
    foo,
  })
  return <div />
}
"
`;

exports[`fixtures > ./fixtures/define-model.tsx 1`] = `
"
import { useModel as __MACROS_useModel } from "/vue-jsx-vapor/macros/use-model";
import { defineVaporComponent, unref } from 'vue'

const $ = unref

export const Comp = defineVaporComponent((__MACROS_props) => {
  const foo = __MACROS_useModel<string, 'm1' | 'm2'>(__MACROS_props, 'foo', { default: __MACROS_props.bar })
  return <div>{foo.value}</div>
}, { props: {
'bar': null, 
'foo': { default: __MACROS_props.bar, skipFactory: true }, 
'onUpdate:foo': null, 
'fooModifiers': null
} })

export default function (__MACROS_props) {
  const modelValue = $(__MACROS_useModel<string>(__MACROS_props, 'modelValue',)!)
  return (
    <Comp v-model:foo_m1={modelValue} bar="bar">
      {modelValue}
    </Comp>
  )
}
"
`;

exports[`fixtures > ./fixtures/define-slots.tsx 1`] = `
"
import { useSlots as __MACROS_useSlots } from "vue";export const Comp = () => {
  const slots = Object.assign<{
    default: () => any
  }>({}, __MACROS_useSlots())
  return <div>{slots.default?.()}</div>
}

export default function () {
  const slots = Object.assign({
    default: () => <div>default</div>,
  },__MACROS_useSlots())
  return <div>{slots.default?.()}</div>
}
"
`;

exports[`fixtures > ./fixtures/define-style.tsx 1`] = `
"import "/vue-jsx-vapor/macros/define-style/0?scopeId=4e9d5cd0&scoped=true&lang.css";import style1 from "/vue-jsx-vapor/macros/define-style/1?scopeId=13f8dd3a&scoped=true&lang.module.scss";
import { useSlots as __MACROS_useSlots } from "vue";import "/vue-jsx-vapor/macros/define-style/2?scopeId=63a7910c&scoped=false&lang.scss";import { defineComponent, ref } from 'vue'

export const Comp = () => {
  const color = ref('red')
  
  return <div {...{style:{'--4e9d5cd0-color-value': color.value}}} data-v-4e9d5cd0="" class="foo">foo</div>
}

export default defineComponent(() => {
  const color = ref('red')
  const styles = style1
  const { default: Default, ...slots } = Object.assign({}, __MACROS_useSlots())
  return () => (
    <>
      <div {...{style:{'--13f8dd3a-color-value': color.value}}} data-v-13f8dd3a="" class={styles.bar}>foo</div>
      <div {...{style:{'--13f8dd3a-color-value': color.value}}} data-v-13f8dd3a="" class="bar">
        <span data-v-13f8dd3a="" class={styles['bar-baz']}>bar</span>
      </div>

      <Default {...{style:{'--13f8dd3a-color-value': color.value}}} data-v-13f8dd3a-s="" />
      <slots.title {...{style:{'--13f8dd3a-color-value': color.value}}} data-v-13f8dd3a-s="" />
    </>
  )
})


"
`;
